$field-border: $alto;
$field-placeholder: $alto;
$fieldset-highlighted-bg: $desert-storm;
$legend-font-size: size( deadpool );
$field-message-font-size: size( spiderman );
$label-width: 32.5%;

.field {
  display: flex;
  border: 1px solid $field-border;
  border-radius: $radius;
  margin-bottom: $baseline/2;
  flex-wrap: wrap;
  align-items: stretch;
}

.field-input {
  @include height(1rem, 46px); // 48px but we have a 1px border on the parent
  border: 0;
  background: none;
  padding-left: $baseline/2;
  padding-right: $baseline/2;
  resize: none;
  flex: 1;
  display: flex;
  flex-wrap: wrap;
}

// Textareas need the col attribute with is unpredictable for sizing
// so we need a width to prevent it from wrapping with flexbox
textarea.field-input {
  // Calc used to make it easier when using a single variable for widths
  width: calc(100% - #{$label-width});
}

.field-label {
  @include height(13px, 46px); // 48px but we have a 1px border on the parent
  float: left;
  padding-left: $baseline/2;
  width: $label-width;
  font-weight: bold;
}

.field-input::placeholder {
  color: $field-placeholder;
}

.field-btn {
  margin:  $baseline/4 $baseline/4 $baseline/4 0;
  display: flex;
  min-width: $baseline*2.5; // Needs a fixed width or the padding collapses due to a bug in Flexbox
}

.field-img {
  margin: 0.1875rem; // 3px
}

.field.-int {
  width: $baseline*2;
  text-align: center;
}

.field-message {
  @include height( $field-message-font-size, 32px);
  padding-left: $baseline/2;
  clear: both;
  display: none;
  width: 100%;
}

// Focus states
form .field.is-focussed {
  // border-color: $active-border;
  // box-shadow: $active-shadow;
  position: relative;
  z-index: 3;
}

// The parent is focused so we remove the outline from the actual input
.field.is-focussed .field-input {
  outline: 0;
}

.field.has-select {
  position: relative;

  // Remove selectbox arrows
  .field-input {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    cursor: pointer;
    position: relative;
    z-index: 2;
  }
}

.field.has-select:after {
  content: "â–¾";
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: $baseline/2;
  margin-top: -1px;
  z-index: 1;
}


// Validation
.field.is-invalid {
  border-color: color( danger );
  background-color: rgba( color( danger ), 0.05);
  position: relative;
  z-index: 2;
}

.field.is-invalid > .field-message.-invalid {
  color: color( danger );
  font-weight: bold;
  display: block;
}

.field.is-valid {
  border-color: color( success );
  background-color: rgba( color( success ), 0.05);
  position: relative;
  z-index: 2;
}

.field.is-valid > .field-message.-valid {
  color: color( success );
  font-weight: bold;
  display: block;
}

.field.has-hint > .field-message.-hint {
  color: color( info );
  display: block;
}



// Fieldsets
.fieldset {
  margin-bottom: $baseline/2;
  box-shadow: $shadow;
}

.fieldset > .field {
  margin-bottom: 0;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  margin-bottom: -1px;
}

.fieldset > .field + .field {
  border-radius: 0;
}

.fieldset > .field:last-child {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}

.fieldset > .field.is-focussed {
  border-radius: $radius;
}

.fieldset.-inset {
  margin-bottom: 1px; // Reveal the border
  background-color: $fieldset-highlighted-bg;
  box-shadow: none;

  &:last-child {
    margin-bottom: 0;
  }
}

// Add border-radius back to the last field in the last fieldset
.fieldset.-inset:last-child > .field:last-child {
  border-bottom-left-radius: $radius;
  border-bottom-right-radius: $radius;
}

.fieldset.-inset > .field {
  border-radius: 0;
  margin-left: -1px;
  margin-right: -1px;

  &.is-focussed {
    border-radius: $radius;
  }
}



// Legends
.legend {
  @include height($legend-font-size, 24px);
  font-weight: bold;
  margin-bottom: $baseline/2;
}

.sublegend {
  margin-top: 0;
  margin-bottom: $baseline;
}



// Check boxes
.checkbox {
  display: inline-block;
  position: relative;
  padding: $baseline/2 $baseline/2 $baseline/2 $baseline;
  margin-bottom: $baseline/2;

  @include upto( dre ) {
    display: block;
 }
}
