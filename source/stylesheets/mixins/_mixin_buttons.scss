$darken: 5% !default;

// Wrap in a mixin so we can call it
// with the rest of the buttons
@mixin buttons() {

  // Iterate through the button map
  @each $b in $buttons {

    // When using gulp-sass we need to do this
    // due to some strange interpolation issues
    $modifier: "-#{nth($b,1)}";

    // Use the first value as the class name
    .btn.#{$modifier} {

      // Use the other values in order
      background-color: nth($b,2);
      border-color: nth($b,3);
      color: nth($b,4);

      // Focus styles are just the defaults as they *should*
      // have an `outline` anyway
      &:focus {
        background-color: nth($b,2);
        color: nth($b,4);
      }

      // If the mixin `hover` is present, use it
      // (It contains the contents within a `.no-touch` class)
      @if function-exists( hover ) {
        @include hover(true) {
          background-color: darken( nth($b,2), $darken );
          color: nth($b,4);
        }
      }

      // Otherwise just use the normal hover pseudo-classes
      @else {
        &:hover {
          background-color: darken( nth($b,2), $darken );
          color: nth($b,4);
        }
      }
    }
  }
}
